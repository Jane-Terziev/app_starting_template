name: Deploy to Production

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  deploy_production:
    name: 'Deploy to production'
    runs-on: ubuntu-latest
    environment: Production
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

      - name: Lint code for consistent style
        run: bin/rubocop -f github

      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client libpq-dev

      - name: Run RSpec
        env:
          RAILS_ENV: test
          DATABASE_HOST: localhost
          DATABASE_NAME: app_name_test
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
        run: bundle exec rake db:test:prepare spec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/capybara
          if-no-files-found: ignore

      - name: Add Kamal secrets file
        run: |
          mkdir -p .kamal
          echo "KAMAL_REGISTRY_PASSWORD=${{ secrets.KAMAL_REGISTRY_PASSWORD }}" >> .kamal/secrets
          echo "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" >> .kamal/secrets
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .kamal/secrets
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .kamal/secrets
          echo "NEW_RELIC_LICENSE_KEY=${{ secrets.NEW_RELIC_LICENSE_KEY }}" >> .kamal/secrets

      - name: Add SSH key
        run: |
          mkdir -p ssh
          echo "${{ secrets.EC2_SSH_KEY }}" >> ssh/ec2-ssh-key.pem

      - name: Deploy to production with Kamal
        if: success()
        run: ./bin/kamal deploy